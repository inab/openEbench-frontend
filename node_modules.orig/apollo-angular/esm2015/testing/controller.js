/**
 * Controller to be injected into tests, that allows for mocking and flushing
 * of operations.
 *
 *
 */
export class ApolloTestingController {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2Fwb2xsby1hbmd1bGFyL3Rlc3RpbmcvIiwic291cmNlcyI6WyJjb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBOzs7OztHQUtHO0FBQ0gsTUFBTSxPQUFnQix1QkFBdUI7Q0E2RjVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEb2N1bWVudE5vZGV9IGZyb20gJ2dyYXBocWwnO1xuXG5pbXBvcnQge1Rlc3RPcGVyYXRpb24sIE9wZXJhdGlvbn0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG5leHBvcnQgdHlwZSBNYXRjaE9wZXJhdGlvbkZuID0gKG9wOiBPcGVyYXRpb24pID0+IGJvb2xlYW47XG5leHBvcnQgdHlwZSBNYXRjaE9wZXJhdGlvbiA9XG4gIHwgc3RyaW5nXG4gIHwgRG9jdW1lbnROb2RlXG4gIHwgT3BlcmF0aW9uXG4gIHwgTWF0Y2hPcGVyYXRpb25GbjtcblxuLyoqXG4gKiBDb250cm9sbGVyIHRvIGJlIGluamVjdGVkIGludG8gdGVzdHMsIHRoYXQgYWxsb3dzIGZvciBtb2NraW5nIGFuZCBmbHVzaGluZ1xuICogb2Ygb3BlcmF0aW9ucy5cbiAqXG4gKlxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQXBvbGxvVGVzdGluZ0NvbnRyb2xsZXIge1xuICAvKipcbiAgICogU2VhcmNoIGZvciBvcGVyYXRpb25zIHRoYXQgbWF0Y2ggdGhlIGdpdmVuIHBhcmFtZXRlciwgd2l0aG91dCBhbnkgZXhwZWN0YXRpb25zLlxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IG1hdGNoKG1hdGNoOiBNYXRjaE9wZXJhdGlvbik6IFRlc3RPcGVyYXRpb25bXTtcblxuICAvKipcbiAgICogRXhwZWN0IHRoYXQgYSBzaW5nbGUgIGhhcyBiZWVuIG1hZGUgd2hpY2ggbWF0Y2hlcyB0aGUgZ2l2ZW4gVVJMLCBhbmQgcmV0dXJuIGl0c1xuICAgKiBtb2NrLlxuICAgKlxuICAgKiBJZiBubyBzdWNoICBoYXMgYmVlbiBtYWRlLCBvciBtb3JlIHRoYW4gb25lIHN1Y2ggIGhhcyBiZWVuIG1hZGUsIGZhaWwgd2l0aCBhblxuICAgKiBlcnJvciBtZXNzYWdlIGluY2x1ZGluZyB0aGUgZ2l2ZW4gIGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBwdWJsaWMgYWJzdHJhY3QgZXhwZWN0T25lKFxuICAgIG9wZXJhdGlvbk5hbWU6IHN0cmluZyxcbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZyxcbiAgKTogVGVzdE9wZXJhdGlvbjtcblxuICAvKipcbiAgICogRXhwZWN0IHRoYXQgYSBzaW5nbGUgIGhhcyBiZWVuIG1hZGUgd2hpY2ggbWF0Y2hlcyB0aGUgZ2l2ZW4gcGFyYW1ldGVycywgYW5kIHJldHVyblxuICAgKiBpdHMgbW9jay5cbiAgICpcbiAgICogSWYgbm8gc3VjaCAgaGFzIGJlZW4gbWFkZSwgb3IgbW9yZSB0aGFuIG9uZSBzdWNoICBoYXMgYmVlbiBtYWRlLCBmYWlsIHdpdGggYW5cbiAgICogZXJyb3IgbWVzc2FnZSBpbmNsdWRpbmcgdGhlIGdpdmVuICBkZXNjcmlwdGlvbiwgaWYgYW55LlxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IGV4cGVjdE9uZShvcDogT3BlcmF0aW9uLCBkZXNjcmlwdGlvbj86IHN0cmluZyk6IFRlc3RPcGVyYXRpb247XG5cbiAgLyoqXG4gICAqIEV4cGVjdCB0aGF0IGEgc2luZ2xlICBoYXMgYmVlbiBtYWRlIHdoaWNoIG1hdGNoZXMgdGhlIGdpdmVuIHByZWRpY2F0ZSBmdW5jdGlvbiwgYW5kXG4gICAqIHJldHVybiBpdHMgbW9jay5cbiAgICpcbiAgICogSWYgbm8gc3VjaCAgaGFzIGJlZW4gbWFkZSwgb3IgbW9yZSB0aGFuIG9uZSBzdWNoICBoYXMgYmVlbiBtYWRlLCBmYWlsIHdpdGggYW5cbiAgICogZXJyb3IgbWVzc2FnZSBpbmNsdWRpbmcgdGhlIGdpdmVuICBkZXNjcmlwdGlvbiwgaWYgYW55LlxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IGV4cGVjdE9uZShcbiAgICBtYXRjaEZuOiBNYXRjaE9wZXJhdGlvbkZuLFxuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nLFxuICApOiBUZXN0T3BlcmF0aW9uO1xuXG4gIC8qKlxuICAgKiBFeHBlY3QgdGhhdCBhIHNpbmdsZSAgaGFzIGJlZW4gbWFkZSB3aGljaCBtYXRjaGVzIHRoZSBnaXZlbiBjb25kaXRpb24sIGFuZCByZXR1cm5cbiAgICogaXRzIG1vY2suXG4gICAqXG4gICAqIElmIG5vIHN1Y2ggIGhhcyBiZWVuIG1hZGUsIG9yIG1vcmUgdGhhbiBvbmUgc3VjaCAgaGFzIGJlZW4gbWFkZSwgZmFpbCB3aXRoIGFuXG4gICAqIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBnaXZlbiAgZGVzY3JpcHRpb24sIGlmIGFueS5cbiAgICovXG4gIHB1YmxpYyBhYnN0cmFjdCBleHBlY3RPbmUoXG4gICAgbWF0Y2g6IE1hdGNoT3BlcmF0aW9uLFxuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nLFxuICApOiBUZXN0T3BlcmF0aW9uO1xuXG4gIC8qKlxuICAgKiBFeHBlY3QgdGhhdCBubyBvcGVyYXRpb25zIGhhdmUgYmVlbiBtYWRlIHdoaWNoIG1hdGNoIHRoZSBnaXZlbiBVUkwuXG4gICAqXG4gICAqIElmIGEgbWF0Y2hpbmcgIGhhcyBiZWVuIG1hZGUsIGZhaWwgd2l0aCBhbiBlcnJvciBtZXNzYWdlIGluY2x1ZGluZyB0aGUgZ2l2ZW5cbiAgICogZGVzY3JpcHRpb24sIGlmIGFueS5cbiAgICovXG4gIHB1YmxpYyBhYnN0cmFjdCBleHBlY3ROb25lKG9wZXJhdGlvbk5hbWU6IHN0cmluZywgZGVzY3JpcHRpb24/OiBzdHJpbmcpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBFeHBlY3QgdGhhdCBubyBvcGVyYXRpb25zIGhhdmUgYmVlbiBtYWRlIHdoaWNoIG1hdGNoIHRoZSBnaXZlbiBwYXJhbWV0ZXJzLlxuICAgKlxuICAgKiBJZiBhIG1hdGNoaW5nICBoYXMgYmVlbiBtYWRlLCBmYWlsIHdpdGggYW4gZXJyb3IgbWVzc2FnZSBpbmNsdWRpbmcgdGhlIGdpdmVuXG4gICAqIGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBwdWJsaWMgYWJzdHJhY3QgZXhwZWN0Tm9uZShvcDogT3BlcmF0aW9uLCBkZXNjcmlwdGlvbj86IHN0cmluZyk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEV4cGVjdCB0aGF0IG5vIG9wZXJhdGlvbnMgaGF2ZSBiZWVuIG1hZGUgd2hpY2ggbWF0Y2ggdGhlIGdpdmVuIHByZWRpY2F0ZSBmdW5jdGlvbi5cbiAgICpcbiAgICogSWYgYSBtYXRjaGluZyAgaGFzIGJlZW4gbWFkZSwgZmFpbCB3aXRoIGFuIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBnaXZlblxuICAgKiBkZXNjcmlwdGlvbiwgaWYgYW55LlxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IGV4cGVjdE5vbmUoXG4gICAgbWF0Y2hGbjogTWF0Y2hPcGVyYXRpb25GbixcbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZyxcbiAgKTogdm9pZDtcblxuICAvKipcbiAgICogRXhwZWN0IHRoYXQgbm8gb3BlcmF0aW9ucyBoYXZlIGJlZW4gbWFkZSB3aGljaCBtYXRjaCB0aGUgZ2l2ZW4gY29uZGl0aW9uLlxuICAgKlxuICAgKiBJZiBhIG1hdGNoaW5nICBoYXMgYmVlbiBtYWRlLCBmYWlsIHdpdGggYW4gZXJyb3IgbWVzc2FnZSBpbmNsdWRpbmcgdGhlIGdpdmVuXG4gICAqIGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBwdWJsaWMgYWJzdHJhY3QgZXhwZWN0Tm9uZShtYXRjaDogTWF0Y2hPcGVyYXRpb24sIGRlc2NyaXB0aW9uPzogc3RyaW5nKTogdm9pZDtcblxuICAvKipcbiAgICogVmVyaWZ5IHRoYXQgbm8gdW5tYXRjaGVkIG9wZXJhdGlvbnMgYXJlIG91dHN0YW5kaW5nLlxuICAgKlxuICAgKiBJZiBhbnkgb3BlcmF0aW9ucyBhcmUgb3V0c3RhbmRpbmcsIGZhaWwgd2l0aCBhbiBlcnJvciBtZXNzYWdlIGluZGljYXRpbmcgd2hpY2ggb3BlcmF0aW9ucyB3ZXJlIG5vdFxuICAgKiBoYW5kbGVkLlxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IHZlcmlmeSgpOiB2b2lkO1xufVxuIl19