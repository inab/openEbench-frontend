export function ExcludedUrl() { }
if (false) {
    ExcludedUrl.prototype.url;
    ExcludedUrl.prototype.httpMethods;
}
export function ExcludedUrlRegex() { }
if (false) {
    ExcludedUrlRegex.prototype.urlPattern;
    ExcludedUrlRegex.prototype.httpMethods;
}
export function KeycloakOptions() { }
if (false) {
    KeycloakOptions.prototype.config;
    KeycloakOptions.prototype.initOptions;
    KeycloakOptions.prototype.enableBearerInterceptor;
    KeycloakOptions.prototype.loadUserProfileAtStartUp;
    KeycloakOptions.prototype.bearerExcludedUrls;
    KeycloakOptions.prototype.authorizationHeaderName;
    KeycloakOptions.prototype.bearerPrefix;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5Y2xvYWstb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2tleWNsb2FrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29yZS9pbnRlcmZhY2VzL2tleWNsb2FrLW9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUNBLGlDQUdDOztJQUZDLDBCQUFZO0lBQ1osa0NBQTRCOztBQVE5QixzQ0FHQzs7SUFGQyxzQ0FBbUI7SUFDbkIsdUNBQTRCOztBQU05QixxQ0F3REM7O0lBL0NDLGlDQUFpQztJQUlqQyxzQ0FBa0M7SUFXbEMsa0RBQWtDO0lBU2xDLG1EQUFtQztJQU1uQyw2Q0FBOEM7SUFPOUMsa0RBQWlDO0lBU2pDLHVDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBNYXVyaWNpbyBHZW1lbGxpIFZpZ29sbyBhbmQgY29udHJpYnV0b3JzLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGEgTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL21hdXJpY2lvdmlnb2xvL2tleWNsb2FrLWFuZ3VsYXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IEtleWNsb2FrSW5pdE9wdGlvbnMgfSBmcm9tICcuL2tleWNsb2FrLWluaXQtb3B0aW9ucyc7XG5pbXBvcnQgeyBLZXljbG9ha0NvbmZpZyB9IGZyb20gJy4va2V5Y2xvYWstY29uZmlnJztcblxuLyoqXG4gKiBIVFRQIE1ldGhvZHNcbiAqL1xuZXhwb3J0IHR5cGUgSHR0cE1ldGhvZHMgPVxuICB8ICdHRVQnXG4gIHwgJ1BPU1QnXG4gIHwgJ1BVVCdcbiAgfCAnREVMRVRFJ1xuICB8ICdPUFRJT05TJ1xuICB8ICdIRUFEJ1xuICB8ICdQQVRDSCc7XG5cbi8qKlxuICogRXhjbHVkZWRVcmwgdHlwZSBtYXkgYmUgdXNlZCB0byBzcGVjaWZ5IHRoZSB1cmwgYW5kIHRoZSBIVFRQIG1ldGhvZCB0aGF0XG4gKiBzaG91bGQgbm90IGJlIGludGVyY2VwdGVkIGJ5IHRoZSBLZXljbG9ha0JlYXJlckludGVyY2VwdG9yLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBjb25zdCBleGNsdWRlZFVybDogRXhjbHVkZWRVcmxbXSA9IFtcbiAqICB7XG4gKiAgICB1cmw6ICdyZXBvcnRzL3B1YmxpYydcbiAqICAgIGh0dHBNZXRob2RzOiBbJ0dFVCddXG4gKiAgfVxuICogXVxuICpcbiAqIEluIHRoZSBleGFtcGxlIGFib3ZlIGZvciBVUkwgcmVwb3J0cy9wdWJsaWMgYW5kIEhUVFAgTWV0aG9kIEdFVCB0aGVcbiAqIGJlYXJlciB3aWxsIG5vdCBiZSBhdXRvbWF0aWNhbGx5IGFkZGVkLlxuICpcbiAqIElmIHRoZSB1cmwgaXMgaW5mb3JtZWQgYnV0IGh0dHBNZXRob2QgaXMgdW5kZWZpbmVkLCB0aGVuIHRoZSBiZWFyZXJcbiAqIHdpbGwgbm90IGJlIGFkZGVkIGZvciBhbGwgSFRUUCBNZXRob2RzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEV4Y2x1ZGVkVXJsIHtcbiAgdXJsOiBzdHJpbmc7XG4gIGh0dHBNZXRob2RzPzogSHR0cE1ldGhvZHNbXTtcbn1cblxuLyoqXG4gKiBTaW1pbGFyIHRvIEV4Y2x1ZGVkVXJsLCBjb250YWlucyB0aGUgSFRUUCBtZXRob2RzIGFuZCBhIHJlZ2V4IHRvXG4gKiBpbmNsdWRlIHRoZSB1cmwgcGF0dGVybnMuXG4gKiBUaGlzIGludGVyZmFjZSBpcyB1c2VkIGludGVybmFsbHkgYnkgdGhlIEtleWNsb2FrU2VydmljZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBFeGNsdWRlZFVybFJlZ2V4IHtcbiAgdXJsUGF0dGVybjogUmVnRXhwO1xuICBodHRwTWV0aG9kcz86IEh0dHBNZXRob2RzW107XG59XG5cbi8qKlxuICoga2V5Y2xvYWstYW5ndWxhciBpbml0aWFsaXphdGlvbiBvcHRpb25zLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEtleWNsb2FrT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBDb25maWdzIHRvIGluaXQgdGhlIGtleWNsb2FrLWpzIGxpYnJhcnkuIElmIHVuZGVmaW5lZCwgd2lsbCBsb29rIGZvciBhIGtleWNsb2FrLmpzb24gZmlsZVxuICAgKiBhdCByb290IG9mIHRoZSBwcm9qZWN0LlxuICAgKiBJZiBub3QgdW5kZWZpbmVkLCBjYW4gYmUgYSBzdHJpbmcgbWVhbmluZyB0aGUgdXJsIHRvIHRoZSBrZXljbG9hay5qc29uIGZpbGUgb3IgYW4gb2JqZWN0XG4gICAqIG9mIHtAbGluayBLZXljbG9ha0NvbmZpZ30uIFVzZSB0aGlzIGNvbmZpZ3VyYXRpb24gaWYgeW91IHdhbnQgdG8gc3BlY2lmeSB0aGUga2V5Y2xvYWsgc2VydmVyLFxuICAgKiByZWFsbSwgY2xpZW50SWQuIFRoaXMgaXMgdXNlZnVsbCBpZiB5b3UgaGF2ZSBkaWZmZXJlbnQgY29uZmlndXJhdGlvbnMgZm9yIHByb2R1Y3Rpb24sIHN0YWdlXG4gICAqIGFuZCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMuIEhpbnQ6IE1ha2UgdXNlIG9mIEFuZ3VsYXIgZW52aXJvbm1lbnQgY29uZmlndXJhdGlvbi5cbiAgICovXG4gIGNvbmZpZz86IHN0cmluZyB8IEtleWNsb2FrQ29uZmlnO1xuICAvKipcbiAgICogT3B0aW9ucyB0byBpbml0aWFsaXplIHRoZSBhZGFwdGVyLiBVc2VkIGJ5IGtleWNsb2FrLWpzLlxuICAgKi9cbiAgaW5pdE9wdGlvbnM/OiBLZXljbG9ha0luaXRPcHRpb25zO1xuICAvKipcbiAgICogQnkgZGVmYXVsdCBhbGwgcmVxdWVzdHMgbWFkZSBieSBBbmd1bGFyIEh0dHBDbGllbnQgd2lsbCBiZSBpbnRlcmNlcHRlZCBpbiBvcmRlciB0b1xuICAgKiBhZGQgdGhlIGJlYXJlciBpbiB0aGUgQXV0aG9yaXphdGlvbiBIdHRwIEhlYWRlci4gSG93ZXZlciwgaWYgdGhpcyBpcyBhIG5vdCBkZXNpcmVkXG4gICAqIGZlYXR1cmUsIHRoZSBlbmFibGVCZWFyZXJJbnRlcmNlcHRvciBtdXN0IGJlIGZhbHNlLlxuICAgKlxuICAgKiBCcmllZmx5LCBpZiBlbmFibGVCZWFyZXJJbnRlcmNlcHRvciA9PT0gZmFsc2UsIHRoZSBiZWFyZXIgd2lsbCBub3QgYmUgYWRkZWRcbiAgICogdG8gdGhlIGF1dGhvcml6YXRpb24gaGVhZGVyLlxuICAgKlxuICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyB0cnVlLlxuICAgKi9cbiAgZW5hYmxlQmVhcmVySW50ZXJjZXB0b3I/OiBib29sZWFuO1xuICAvKipcbiAgICogRm9yY2VzIHRoZSBleGVjdXRpb24gb2YgbG9hZFVzZXJQcm9maWxlIGFmdGVyIHRoZSBrZXljbG9hayBpbml0aWFsaXphdGlvbiBjb25zaWRlcmluZyB0aGF0IHRoZVxuICAgKiB1c2VyIGxvZ2dlZCBpbi5cbiAgICogVGhpcyBvcHRpb24gaXMgcmVjb21tZW5kZWQgaWYgaXMgZGVzaXJhYmxlIHRvIGhhdmUgdGhlIHVzZXIgZGV0YWlscyBhdCB0aGUgYmVnaW5uaW5nLFxuICAgKiBzbyBhZnRlciB0aGUgbG9naW4sIHRoZSBsb2FkVXNlclByb2ZpbGUgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYW5kIGl0J3MgdmFsdWUgY2FjaGVkLlxuICAgKlxuICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyB0cnVlLlxuICAgKi9cbiAgbG9hZFVzZXJQcm9maWxlQXRTdGFydFVwPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFN0cmluZyBBcnJheSB0byBleGNsdWRlIHRoZSB1cmxzIHRoYXQgc2hvdWxkIG5vdCBoYXZlIHRoZSBBdXRob3JpemF0aW9uIEhlYWRlciBhdXRvbWF0aWNhbGx5XG4gICAqIGFkZGVkLiBUaGlzIGxpYnJhcnkgbWFrZXMgdXNlIG9mIEFuZ3VsYXIgSHR0cCBJbnRlcmNlcHRvciwgdG8gYXV0b21hdGljYWxseSBhZGQgdGhlIEJlYXJlclxuICAgKiB0b2tlbiB0byB0aGUgcmVxdWVzdC5cbiAgICovXG4gIGJlYXJlckV4Y2x1ZGVkVXJscz86IChzdHJpbmcgfCBFeGNsdWRlZFVybClbXTtcbiAgLyoqXG4gICAqIFRoaXMgdmFsdWUgd2lsbCBiZSB1c2VkIGFzIHRoZSBBdXRob3JpemF0aW9uIEh0dHAgSGVhZGVyIG5hbWUuIFRoZSBkZWZhdWx0IHZhbHVlIGlzXG4gICAqICoqQXV0aG9yaXphdGlvbioqLiBJZiB0aGUgYmFja2VuZCBleHBlY3RzIHJlcXVlc3RzIHRvIGhhdmUgYSB0b2tlbiBpbiBhIGRpZmZlcmVudCBoZWFkZXIsIHlvdVxuICAgKiBzaG91bGQgY2hhbmdlIHRoaXMgdmFsdWUsIGkuZTogKipKV1QtQXV0aG9yaXphdGlvbioqLiBUaGlzIHdpbGwgcmVzdWx0IGluIGEgSHR0cCBIZWFkZXJcbiAgICogQXV0aG9yaXphdGlvbiBhcyBcIkpXVC1BdXRob3JpemF0aW9uOiBiZWFyZXIgPHRva2VuPlwiLlxuICAgKi9cbiAgYXV0aG9yaXphdGlvbkhlYWRlck5hbWU/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGlzIHZhbHVlIHdpbGwgYmUgaW5jbHVkZWQgaW4gdGhlIEF1dGhvcml6YXRpb24gSHR0cCBIZWFkZXIgcGFyYW0uIFRoZSBkZWZhdWx0IHZhbHVlIGlzXG4gICAqICoqYmVhcmVyKiosIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgSHR0cCBIZWFkZXIgQXV0aG9yaXphdGlvbiBhcyBcIkF1dGhvcml6YXRpb246IGJlYXJlciA8dG9rZW4+XCIuXG4gICAqIElmIGFueSBvdGhlciB2YWx1ZSBpcyBuZWVkZWQgYnkgdGhlIGJhY2tlbmQgaW4gdGhlIGF1dGhvcml6YXRpb24gaGVhZGVyLCB5b3Ugc2hvdWxkIGNoYW5nZSB0aGlzXG4gICAqIHZhbHVlLCBpLmU6ICoqQmVhcmVyKiouXG4gICAqXG4gICAqIFdhcm5pbmc6IHRoaXMgdmFsdWUgbXVzdCBiZSBpbiBjb21wbGlhbmNlIHdpdGggdGhlIGtleWNsb2FrIHNlcnZlciBpbnN0YW5jZSBhbmQgdGhlIGFkYXB0ZXIuXG4gICAqL1xuICBiZWFyZXJQcmVmaXg/OiBzdHJpbmc7XG59XG4iXX0=