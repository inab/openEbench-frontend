export function KeycloakInitOptions() { }
if (false) {
    KeycloakInitOptions.prototype.onLoad;
    KeycloakInitOptions.prototype.token;
    KeycloakInitOptions.prototype.refreshToken;
    KeycloakInitOptions.prototype.idToken;
    KeycloakInitOptions.prototype.timeSkew;
    KeycloakInitOptions.prototype.checkLoginIframe;
    KeycloakInitOptions.prototype.checkLoginIframeInterval;
    KeycloakInitOptions.prototype.responseMode;
    KeycloakInitOptions.prototype.flow;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5Y2xvYWstaW5pdC1vcHRpb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8va2V5Y2xvYWstYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2ludGVyZmFjZXMva2V5Y2xvYWstaW5pdC1vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCQSx5Q0E4Q0M7O0lBMUNDLHFDQUF3QjtJQUl4QixvQ0FBZTtJQUlmLDJDQUFzQjtJQUt0QixzQ0FBaUI7SUFLakIsdUNBQWtCO0lBS2xCLCtDQUEyQjtJQUszQix1REFBd0M7SUFReEMsMkNBQW9DO0lBS3BDLG1DQUFvQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBNYXVyaWNpbyBHZW1lbGxpIFZpZ29sbyBhbmQgY29udHJpYnV0b3JzLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGEgTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL21hdXJpY2lvdmlnb2xvL2tleWNsb2FrLWFuZ3VsYXIvTElDRU5TRVxuICovXG5cbi8qKlxuICogS2V5Y2xvYWsgb25sb2FkIG9wdGlvbnM6ICdsb2dpbi1yZXF1aXJlZCcgb3IgJ2NoZWNrLXNzbydcbiAqL1xuZXhwb3J0IHR5cGUgS2V5Y2xvYWtPbkxvYWQgPSAnbG9naW4tcmVxdWlyZWQnIHwgJ2NoZWNrLXNzbyc7XG4vKipcbiAqIEtleWNsb2FrIHJlc3BvbnNlIG1vZGUgb3B0aW9uczogJ3F1ZXJ5JyBvciAnZnJhZ21lbnQnXG4gKi9cbmV4cG9ydCB0eXBlIEtleWNsb2FrUmVzcG9uc2VNb2RlID0gJ3F1ZXJ5JyB8ICdmcmFnbWVudCc7XG4vKipcbiAqIEtleWNsb2FrIHJlc3BvbnNlIHR5cGUgb3B0aW9uczogJ2NvZGUnIG9yICdpZF90b2tlbiB0b2tlbicgb3IgJ2NvZGUgaWRfdG9rZW4gdG9rZW4nXG4gKi9cbmV4cG9ydCB0eXBlIEtleWNsb2FrUmVzcG9uc2VUeXBlID0gJ2NvZGUnIHwgJ2lkX3Rva2VuIHRva2VuJyB8ICdjb2RlIGlkX3Rva2VuIHRva2VuJztcbi8qKlxuICogS2V5Y2xvYWsgZmxvdzogJ3N0YW5kYXJkJyBvciAnaW1wbGljaXQnIG9yICdoeWJyaWQnXG4gKi9cbmV4cG9ydCB0eXBlIEtleWNsb2FrRmxvdyA9ICdzdGFuZGFyZCcgfCAnaW1wbGljaXQnIHwgJ2h5YnJpZCc7XG5cbi8qKlxuICogRGVmaW5pdGlvbnMgZmlsZSBmcm9tIEtleWNsb2FrSW5pdE9wdGlvbnMsIGZyb20ga2V5Y2xvYWstanMgbGlicmFyeS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBLZXljbG9ha0luaXRPcHRpb25zIHtcbiAgLyoqXG4gICAqIFNwZWNpZmllcyBhbiBhY3Rpb24gdG8gZG8gb24gbG9hZC5cbiAgICovXG4gIG9uTG9hZD86IEtleWNsb2FrT25Mb2FkO1xuICAvKipcbiAgICogU2V0IGFuIGluaXRpYWwgdmFsdWUgZm9yIHRoZSB0b2tlbi5cbiAgICovXG4gIHRva2VuPzogc3RyaW5nO1xuICAvKipcbiAgICogU2V0IGFuIGluaXRpYWwgdmFsdWUgZm9yIHRoZSByZWZyZXNoIHRva2VuLlxuICAgKi9cbiAgcmVmcmVzaFRva2VuPzogc3RyaW5nO1xuICAvKipcbiAgICogU2V0IGFuIGluaXRpYWwgdmFsdWUgZm9yIHRoZSBpZCB0b2tlbiAob25seSB0b2dldGhlciB3aXRoIGB0b2tlbmAgb3JcbiAgICogYHJlZnJlc2hUb2tlbmApLlxuICAgKi9cbiAgaWRUb2tlbj86IHN0cmluZztcbiAgLyoqXG4gICAqIFNldCBhbiBpbml0aWFsIHZhbHVlIGZvciBza2V3IGJldHdlZW4gbG9jYWwgdGltZSBhbmQgS2V5Y2xvYWsgc2VydmVyIGluXG4gICAqIHNlY29uZHMgKG9ubHkgdG9nZXRoZXIgd2l0aCBgdG9rZW5gIG9yIGByZWZyZXNoVG9rZW5gKS5cbiAgICovXG4gIHRpbWVTa2V3PzogbnVtYmVyO1xuICAvKipcbiAgICogU2V0IHRvIGVuYWJsZS9kaXNhYmxlIG1vbml0b3JpbmcgbG9naW4gc3RhdGUuXG4gICAqIEBkZWZhdWx0IHRydWVcbiAgICovXG4gIGNoZWNrTG9naW5JZnJhbWU/OiBib29sZWFuO1xuICAvKipcbiAgICogU2V0IHRoZSBpbnRlcnZhbCB0byBjaGVjayBsb2dpbiBzdGF0ZSAoaW4gc2Vjb25kcykuXG4gICAqIEBkZWZhdWx0IDVcbiAgICovXG4gIGNoZWNrTG9naW5JZnJhbWVJbnRlcnZhbD86IG51bWJlciB8IGFueTtcbiAgLyoqXG4gICAqIFNldCB0aGUgT3BlbklEIENvbm5lY3QgcmVzcG9uc2UgbW9kZSB0byBzZW5kIHRvIEtleWNsb2FrIHVwb24gbG9naW4uXG4gICAqIEBkZWZhdWx0IGZyYWdtZW50IEFmdGVyIHN1Y2Nlc3NmdWwgYXV0aGVudGljYXRpb24gS2V5Y2xvYWsgd2lsbCByZWRpcmVjdFxuICAgKiAgICAgICAgICAgICAgICAgICB0byBKYXZhU2NyaXB0IGFwcGxpY2F0aW9uIHdpdGggT3BlbklEIENvbm5lY3QgcGFyYW1ldGVyc1xuICAgKiAgICAgICAgICAgICAgICAgICBhZGRlZCBpbiBVUkwgZnJhZ21lbnQuIFRoaXMgaXMgZ2VuZXJhbGx5IHNhZmVyIGFuZFxuICAgKiAgICAgICAgICAgICAgICAgICByZWNvbW1lbmRlZCBvdmVyIHF1ZXJ5LlxuICAgKi9cbiAgcmVzcG9uc2VNb2RlPzogS2V5Y2xvYWtSZXNwb25zZU1vZGU7XG4gIC8qKlxuICAgKiBTZXQgdGhlIE9wZW5JRCBDb25uZWN0IGZsb3cuXG4gICAqIEBkZWZhdWx0IHN0YW5kYXJkXG4gICAqL1xuICBmbG93PzogS2V5Y2xvYWtGbG93O1xufVxuIl19